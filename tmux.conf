# plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'
#set -g @plugin 'jimeh/tmux-themepack'

#set -g @themepack 'default/cyan'
set -g @plugin 'dracula/tmux'

set -g @dracula-show-left-icon session
set -g @dracula-show-location false
set -g @dracula-show-weather false
set -g @dracula-show-network false
set -g @dracula-show-fahrenheit false
set -g @dracula-show-powerline true
set -g @dracula-military-time true
set -g @dracula-show-timezone false

set -g @dracula-cpu-usage true
set -g @dracula-ram-usage true
set -g @dracula-day-month true

# vim bindings
setw -g mode-keys vi
set -g @shell_mode 'vi'

# neovim hack
set -g escape-time 10

# numbering from 1, not from 0
set -g base-index 1
setw -g pane-base-index 1

# Setup 'v' to begin selection as in Vim
#bind-key -t vi-copy v begin-selection
# Update default binding of `Enter` to also use copy-pipe
#unbind -t vi-copy Enter

# LINUX
#bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'
#bind -t vi-copy Enter copy-pipe 'xclip -in -selection clipboard'

# OSX
# copy paste under macosx
# brew install reattach-to-user-namespace
# brew install clipper
set -g default-shell $SHELL
# set -g default-command "reattach-to-user-namespace -l ${SHELL}"
#set-option -g default-command "reattach-to-user-namespace -l zsh"
#
#bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
#bind-key -t vi-copy y copy-pipe "nc localhost 8377"
#bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
#bind-key -t vi-copy Enter copy-pipe "nc localhost 8377"
set-window-option -g mode-keys vi

bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "nc localhost 8377"
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "nc localhost 8377"

set -g @shell_mode 'vi'


# # unbind C-b because of VIM
unbind C-b
set -g prefix C-a

bind a send-prefix

bind C clear-history
bind C-l send-keys C-l \; run 'tmux clear-history'

bind P run "thyme -d > /dev/null"

# splitting panes
bind | split-window -h
bind - split-window -v

# movement
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

#bind-key -r C-h select-window -t :-
#bind-key -r C-l select-window -t :+

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# bind-key a send-prefix
bind r source-file ~/.tmux.conf
#
# 256 Colours
set -g default-terminal "screen-256color"

set -g base-index 1

set -g focus-events on

set -g history-limit 262144

set -g set-titles on

# Mouse scrolling within 'copy-mode'
setw -g mouse on
#set -g mouse-select-pane on
#set -g mouse-resize-pane on
#set -g mouse-select-window on
unbind -T root WheelUpPane
unbind -T root WheelDownPane
bind -T root WheelUpPane if -Ft= '#{mouse_any_flag}' 'send-keys -M' 'if -Ft= "#{pane_in_mode}" "send-keys -M" "copy-mode -u"'
#bind -temacs-copy WheelUpPane   halfpage-up
#bind -temacs-copy WheelDownPane halfpage-down


# not really sure what this does, but with it, the scrollwheel works inside Vim
#set-option -g mouse-utf8 on

# allow mouse to enter copy mode and initiate selection
#set-window-option -g mode-mouse on

# as in here: http://superuser.com/a/492285
#set -g terminal-overrides "xterm*:XT:smcup@:rmcup@:kUP5=\eOA:kDN5=\eOB:kLFT5=\eOD:kRIT5=\eOC"
#set -g terminal-overrides 'xterm*:smcup@:rmcup@'
#set -g default-terminal "xterm-256color"

# Avoid stacking keyboard shortcuts within current server
# Make sure we have true colors
set -g default-terminal "xterm-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

# set-option -ga terminal-overrides ",xterm-256color:Tc"
# set-option -ga terminal-overrides ",st-256color:Tc"


set -g status-left-length 32
set -g status-right-length 150

set -g status-fg white
set -g status-bg colour234
set -g window-status-activity-style bold
set-option -g pane-border-style fg=colour245
set-option -g pane-active-border-style fg=colour39

set-option -g renumber-windows on

# ----------------------
# set some pretty colors
# ----------------------
# set pane colors - hilight the active pane
set-option -g pane-border-style fg=colour235 #base02
set-option -g pane-active-border-style fg=colour240 #base01

# colorize messages in the command line
set-option -g message-style bg=black #base02
set-option -g message-style fg=brightred #orange

# ----------------------
# Status Bar
# -----------------------
set-option -g status on                # turn the status bar on
set -g status-interval 5               # set update frequencey (default 15 seconds)
set -g status-justify centre           # center window list for clarity
# set-option -g status-position top    # position the status bar at top of screen

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# set color for status bar
set-option -g status-bg colour235 #base02
set-option -g status-fg yellow #yellow
set-option -g status-style dim

# set window list colors - red for active and cyan for inactive
set-window-option -g window-status-style fg=brightblue #base0
set-window-option -g window-status-style bg=colour236
set-window-option -g window-status-style dim

set-window-option -g window-status-current-style fg=brightred #orange
set-window-option -g window-status-current-style bg=colour236
set-window-option -g window-status-current-style bright


set -g status-left-length 70
set -g status-left "#[bg=colour235]#[fg=white]#S #I:#P #[fg=yellow]#(ifconfig en0 | grep 'inet ' | awk '{print \"L:\" $2}') #[fg=red]#(ifconfig utun0 | grep 'inet ' | awk '{print \"(via vpn)\"}') "
set -g status-right-length 60
# set -g status-right "#[fg=blue]#S #I:#P #[fg=yellow]:: %d %b %Y #[fg=green]:: %H:%M :: #{battery_icon}#{battery_percentage} "
#set -g status-right ":: 🍅 #(cat ~/.thyme-tmux) #[fg=green]:: #{battery_icon}#{battery_percentage} #[fg=blue]:: %d.%m.%Y %H:%M #[fg=red]"
set -g status-right "#{battery_icon}#{battery_percentage} #[fg=blue]:: %d.%m.%Y %H:%M #[fg=red]"

set-window-option -g automatic-rename off

# listen to alerts from all windows
set -g bell-action any

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l


# fix problem with El Capitan
set -g status-interval 0

# initialize plugins
run-shell ~/.tmux/plugins/tpm/tpm
